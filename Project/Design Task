

# JSON VIEWER for debug
1. http://www.jsoneditoronline.org/

# The search function only design in multi-thread version (don't need in single-thread version) 



# SongDataProcessor
1. 
2. (OK) new constructor - multi-thread - allow search functionality 
3. (OK) NEED TO ADD a parse Search Function ()	
4. # create 3 new runnable class [SearchQuery] 
	- SearchArtistQuery
	- SearchTitleQuery
	- SearchTagQuery
	 
   	- fire 3 different searchTask here  (multi-thread)
   		- searchByArtist
   		- searchByTitle
   		- searchByTag





# Driver
1. (OK) passed in searchInputPath to new constructor - single thread with search function version






# MusicLibrary
0. (OK) create new constructor that has searchInput & searchOutput string path as args 
1. (OK) add searchInputPath & searchOutPath to new constructor 
2. (OK) add new trackIDMusicLibrary - for efficient search functionality when detect similars song which present in trackID

/**** NEXT TO DO HERE ******/
1. implement all searchByArtist, searchByTitle, searchByTag method in MUSICLIBRARY class
return in middle proof - http://stackoverflow.com/questions/65035/does-finally-always-execute-in-java

2. in all searchBy method, the final add must have a DEEP COPY of song added into the resultList


3. add 3 searchBy method
	# Important create 3 global instance variable - Set each returned JSONBObject has a method that return
4. 
	

# ThreadSafeMusicLibrary
0. (OK) create new constructor that has searchInput & searchOutput string path as args
1. (OK) passed in searchInput & searchOutput path to new ThreadSafeMusicLibrary
2. - add 3 searchBy method 
		- create 3 new lock each lock/unlock the method when calling super.searchBy
		
		
# create Each SearchQuery
1. (OK) artistSearchQuery
2. (OK) titletSearchQuery
3. (OK) tagSearchQuery

		 